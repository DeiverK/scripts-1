aws ec2 describe-instances --filters "Name=tag:aws:eks:cluster-name,Values=<cluster_name>" "Name=instance-state-name,Values=running" --query 'Reservations[].Instances[].InstanceId' --output text


aws ec2 describe-instances --instance-ids <instance_id> --query 'Reservations[].Instances[].PrivateDnsName' --output text


aws ec2 describe-instances --instance-ids i-0123456789abcdef0 i-0123456789abcdef1 --query 'Reservations[].Instances[].InstanceId' --output text | xargs aws ec2 stop-instances --instance-ids


aws ec2 describe-instances --instance-ids <instance_id> --query 'Reservations[].Instances[].PrivateDnsName' --output text


aws autoscaling describe-auto-scaling-groups --query 'AutoScalingGroups[?contains(Tags[?Key==`aws:eks:cluster-name`].Value,`<cluster_name>`)].AutoScalingGroupName' --output text


aws autoscaling describe-auto-scaling-instances --auto-scaling-group-name <asg_name> --query 'AutoScalingInstances[].InstanceId' --output text


aws autoscaling set-desired-capacity --auto-scaling-group-name <asg_name> --desired-capacity <desired_capacity>

aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names <asg_name> --query 'AutoScalingGroups[].{DesiredCapacity:DesiredCapacity, MinSize:MinSize, MaxSize:MaxSize}' --output text
aws autoscaling update-auto-scaling-group --auto-scaling-group-name <asg_name> --desired-capacity <desired_capacity> --min-size <min_capacity> --max-size <max_capacity>

